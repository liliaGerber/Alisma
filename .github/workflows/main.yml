name: Deploy SSH STRATO

on:
  push:
    branches: [ main ]

concurrency:
  group: deploy-strato-main
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node-version: [22.16.0]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.12.1

      - name: Setup Node ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml

      - name: Install deps
        run: pnpm install --frozen-lockfile

      - name: Build (force base=/alisma/)
        env:
          VITE_EMAILJS_PUBLIC_KEY: ${{ vars.VITE_EMAILJS_PUBLIC_KEY }}
          VITE_EMAILJS_SERVICE_ID: ${{ vars.VITE_EMAILJS_SERVICE_ID }}
          VITE_EMAILJS_TEMPLATE_ID: ${{ vars.VITE_EMAILJS_TEMPLATE_ID }}
        run: pnpm run build -- --base=/alisma/

      - name: Stamp build id
        run: echo "$GITHUB_SHA" > dist/__build_id.txt

      - name: Install lftp
        env: { DEBIAN_FRONTEND: noninteractive }
        run: |
          sudo apt-get -yq update
          sudo apt-get -yq install lftp

      # Prevent 500s from strict Apache config: disable any existing .htaccess
      - name: Disable .htaccess (root and /alisma) â€“ tolerant
        env:
          H: ${{ secrets.STRATO_SSH_HOST }}
          U: ${{ secrets.STRATO_SSH_USER }}
          P: ${{ secrets.STRATO_SSH_PASS }}
        run: |
          lftp -u "$U","$P" sftp://$H -e "
            set sftp:auto-confirm yes;
            set net:timeout 8; set net:max-retries 1;
            set cmd:fail-exit no;    # <-- ignore failures if file doesn't exist
            mv /alisma/.htaccess /alisma/.htaccess.off
            mv /.htaccess /.htaccess.off
            bye
          "


      - name: Pre-deploy listing (/alisma)
        env:
          H: ${{ secrets.STRATO_SSH_HOST }}
          U: ${{ secrets.STRATO_SSH_USER }}
          P: ${{ secrets.STRATO_SSH_PASS }}
        run: |
          lftp -u "$U","$P" sftp://$H -e "
            set cmd:fail-exit yes; set sftp:auto-confirm yes;
            pwd; cls -al /; echo '--- /alisma ---'; cls -al /alisma || echo 'no /alisma yet';
            bye
          "

      - name: Deploy app to /alisma
        uses: pressidium/lftp-mirror-action@v1
        with:
          host: ${{ secrets.STRATO_SSH_HOST }}
          port: 22
          user: ${{ secrets.STRATO_SSH_USER }}
          pass: ${{ secrets.STRATO_SSH_PASS }}
          onlyNewer: false
          settings: 'sftp:auto-confirm=yes; net:timeout=8; net:max-retries=1; cmd:fail-exit=yes'
          localDir: 'dist/'
          remoteDir: '/alisma'
          reverse: true
          options: '--delete --verbose --ignore-time --overwrite --exclude-glob temp --exclude-glob temp/**'

      # Optional: root redirect so https://alisma.at/ jumps to /alisma/
      - name: Deploy root redirect (optional)
        run: |
          mkdir -p redirect-root
          cat > redirect-root/index.html <<'HTML'
          <!doctype html><meta http-equiv="refresh" content="0; url=/alisma/">
          <script>location.href="/alisma/"</script>
          HTML
        shell: bash
      - name: Upload root redirect
        uses: pressidium/lftp-mirror-action@v1
        with:
          host: ${{ secrets.STRATO_SSH_HOST }}
          port: 22
          user: ${{ secrets.STRATO_SSH_USER }}
          pass: ${{ secrets.STRATO_SSH_PASS }}
          onlyNewer: false
          settings: 'sftp:auto-confirm=yes; net:timeout=8; net:max-retries=1; cmd:fail-exit=yes'
          localDir: 'redirect-root/'
          remoteDir: '/'
          reverse: true
          options: '--verbose --ignore-time --overwrite --exclude-glob temp --exclude-glob temp/**'

      - name: Post-deploy listing (/alisma)
        env:
          H: ${{ secrets.STRATO_SSH_HOST }}
          U: ${{ secrets.STRATO_SSH_USER }}
          P: ${{ secrets.STRATO_SSH_PASS }}
        run: |
          lftp -u "$U","$P" sftp://$H -e "
            set cmd:fail-exit yes; set sftp:auto-confirm yes;
            cls -al /alisma;
            bye
          "

      - name: HTTP check
        run: |
          set -e
          echo "/alisma build id:"; curl -fsS https://alisma.at/alisma/__build_id.txt | head -c 12 && echo || true
          echo "Apex (redirect page):"; curl -I https://alisma.at || true
